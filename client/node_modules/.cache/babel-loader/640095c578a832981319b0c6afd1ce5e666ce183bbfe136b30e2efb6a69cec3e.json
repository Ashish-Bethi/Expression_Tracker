{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\2_1\\\\2_1_Project\\\\Actual_Project\\\\newdemo\\\\demo3-22-9\\\\client\\\\src\\\\components\\\\ImageCaptureComponent.jsx\",\n  _s = $RefreshSig$();\n// src/components/ImageCaptureComponent.jsx\nimport React, { useRef, useEffect } from 'react';\nimport html2canvas from 'html2canvas';\nimport Webcam from 'react-webcam';\nimport { uploadImages } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCaptureComponent = () => {\n  _s();\n  const webcamRef = useRef(null);\n  useEffect(() => {\n    const captureScreenshot = () => {\n      html2canvas(document.body).then(canvas => {\n        canvas.toBlob(blob => {\n          if (blob) {\n            const screenshotFile = new File([blob], 'screenshot.png', {\n              type: 'image/png'\n            });\n            captureWebcamImage(screenshotFile);\n          }\n        });\n      });\n    };\n    const captureWebcamImage = screenshotFile => {\n      if (webcamRef.current) {\n        const imageSrc = webcamRef.current.getScreenshot();\n        const webcamBlob = dataURItoBlob(imageSrc);\n        const webcamFile = new File([webcamBlob], 'webcam.jpg', {\n          type: 'image/jpeg'\n        });\n        uploadImages(screenshotFile, webcamFile).then(response => {\n          console.log('Images uploaded successfully:', response);\n        }).catch(error => {\n          console.error('Error uploading images:', error);\n        });\n      }\n    };\n    const dataURItoBlob = dataURI => {\n      const byteString = atob(dataURI.split(',')[1]);\n      const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      const ab = new ArrayBuffer(byteString.length);\n      const ia = new Uint8Array(ab);\n      for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      return new Blob([ab], {\n        type: mimeString\n      });\n    };\n    const intervalId = setInterval(() => {\n      captureScreenshot();\n    }, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 0,\n      height: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image capture in progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCaptureComponent, \"vuzfGVXxjtVv1onG8KfrkxLF4wc=\");\n_c = ImageCaptureComponent;\nexport default ImageCaptureComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageCaptureComponent\");","map":{"version":3,"names":["React","useRef","useEffect","html2canvas","Webcam","uploadImages","jsxDEV","_jsxDEV","ImageCaptureComponent","_s","webcamRef","captureScreenshot","document","body","then","canvas","toBlob","blob","screenshotFile","File","type","captureWebcamImage","current","imageSrc","getScreenshot","webcamBlob","dataURItoBlob","webcamFile","response","console","log","catch","error","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","intervalId","setInterval","clearInterval","children","audio","ref","screenshotFormat","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Ashish/2_1/2_1_Project/Actual_Project/newdemo/demo3-22-9/client/src/components/ImageCaptureComponent.jsx"],"sourcesContent":["// src/components/ImageCaptureComponent.jsx\r\nimport React, { useRef, useEffect } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport Webcam from 'react-webcam';\r\nimport { uploadImages } from '../services/api';\r\n\r\nconst ImageCaptureComponent = () => {\r\n  const webcamRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const captureScreenshot = () => {\r\n      html2canvas(document.body).then((canvas) => {\r\n        canvas.toBlob((blob) => {\r\n          if (blob) {\r\n            const screenshotFile = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n            captureWebcamImage(screenshotFile);\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const captureWebcamImage = (screenshotFile) => {\r\n      if (webcamRef.current) {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        const webcamBlob = dataURItoBlob(imageSrc);\r\n        const webcamFile = new File([webcamBlob], 'webcam.jpg', { type: 'image/jpeg' });\r\n\r\n        uploadImages(screenshotFile, webcamFile)\r\n          .then((response) => {\r\n            console.log('Images uploaded successfully:', response);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error uploading images:', error);\r\n          });\r\n      }\r\n    };\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n      const byteString = atob(dataURI.split(',')[1]);\r\n      const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n      const ab = new ArrayBuffer(byteString.length);\r\n      const ia = new Uint8Array(ab);\r\n      for (let i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n      }\r\n      return new Blob([ab], { type: mimeString });\r\n    };\r\n\r\n    const intervalId = setInterval(() => {\r\n      captureScreenshot();\r\n    }, 3000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Webcam\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={0}\r\n        height={0}\r\n      />\r\n      <h2>Image capture in progress...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCaptureComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}