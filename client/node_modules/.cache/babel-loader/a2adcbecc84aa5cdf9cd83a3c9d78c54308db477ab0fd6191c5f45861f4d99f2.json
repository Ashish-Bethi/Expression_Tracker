{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\2_1\\\\2_1_Project\\\\Actual_Project\\\\newdemo\\\\demo3-22-9\\\\client\\\\src\\\\components\\\\ImageCaptureComponent.jsx\",\n  _s = $RefreshSig$();\n// src/components/ImageCaptureComponent.jsx\nimport React, { useRef, useEffect } from 'react';\nimport html2canvas from 'html2canvas';\nimport Webcam from 'react-webcam';\nimport { uploadImages } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCaptureComponent = () => {\n  _s();\n  const webcamRef = useRef(null);\n  useEffect(() => {\n    const captureImages = async () => {\n      // Capture the screenshot\n      const canvas = await html2canvas(document.body);\n      canvas.toBlob(async blob => {\n        if (blob) {\n          const screenshotFile = new File([blob], 'screenshot.png', {\n            type: 'image/png'\n          });\n          // Capture the webcam image\n          const imageSrc = webcamRef.current.getScreenshot();\n          if (imageSrc) {\n            const webcamBlob = dataURItoBlob(imageSrc);\n            const webcamFile = new File([webcamBlob], 'webcam.jpg', {\n              type: 'image/jpeg'\n            });\n\n            // Upload images\n            await uploadImages(screenshotFile, webcamFile);\n          }\n        }\n      });\n    };\n    const intervalId = setInterval(captureImages, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const dataURItoBlob = dataURI => {\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/png\",\n      width: 0 // Set to 0 to hide the feed\n      ,\n      height: 0 // Set to 0 to hide the feed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image capture in progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCaptureComponent, \"vuzfGVXxjtVv1onG8KfrkxLF4wc=\");\n_c = ImageCaptureComponent;\nexport default ImageCaptureComponent;\nvar _c;\n$RefreshReg$(_c, \"ImageCaptureComponent\");","map":{"version":3,"names":["React","useRef","useEffect","html2canvas","Webcam","uploadImages","jsxDEV","_jsxDEV","ImageCaptureComponent","_s","webcamRef","captureImages","canvas","document","body","toBlob","blob","screenshotFile","File","type","imageSrc","current","getScreenshot","webcamBlob","dataURItoBlob","webcamFile","intervalId","setInterval","clearInterval","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","children","audio","ref","screenshotFormat","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Ashish/2_1/2_1_Project/Actual_Project/newdemo/demo3-22-9/client/src/components/ImageCaptureComponent.jsx"],"sourcesContent":["// src/components/ImageCaptureComponent.jsx\r\nimport React, { useRef, useEffect } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport Webcam from 'react-webcam';\r\nimport { uploadImages } from '../services/api';\r\n\r\nconst ImageCaptureComponent = () => {\r\n  const webcamRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const captureImages = async () => {\r\n      // Capture the screenshot\r\n      const canvas = await html2canvas(document.body);\r\n      canvas.toBlob(async (blob) => {\r\n        if (blob) {\r\n          const screenshotFile = new File([blob], 'screenshot.png', { type: 'image/png' });\r\n          // Capture the webcam image\r\n          const imageSrc = webcamRef.current.getScreenshot();\r\n          if (imageSrc) {\r\n            const webcamBlob = dataURItoBlob(imageSrc);\r\n            const webcamFile = new File([webcamBlob], 'webcam.jpg', { type: 'image/jpeg' });\r\n\r\n            // Upload images\r\n            await uploadImages(screenshotFile, webcamFile);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    const intervalId = setInterval(captureImages, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const dataURItoBlob = (dataURI) => {\r\n    const byteString = atob(dataURI.split(',')[1]);\r\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], { type: mimeString });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Webcam\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/png\"\r\n        width={0} // Set to 0 to hide the feed\r\n        height={0} // Set to 0 to hide the feed\r\n      />\r\n      <h2>Image capture in progress...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCaptureComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}